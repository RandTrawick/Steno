{
  "KWR-P/AD": "{^}.add(){#Left}",
  "KWR-P/ELS": "{^}{>}else:\n",
  "KWR-P/ELS/TP": "{^}{>}if:\n",
  "KWR-P/EUPB/EUT": "{^}__init__.py",
  "KWR-P/EUPBT": "{^}\\{\\}{#Left}",
  "KWR-P/HEUPBT": "{^}{>}: str {#Left Left}",
  "KWR-P/HRAOP": "{^}{>}for item in items:{#Left Left Left Left Left Left Left Left Left Left Left Left}",
  "KWR-P/PREUPBT": "{^}{>}print(){#Left}",
  "KWR-P/SET": "{^}{>}setter = set(){#Left left left left left left left left left left left}",
  "KWR-P/SEUS": "sys",
  "KWR-P/SKREUB": "{^}    def test_newy(self):\n{#Tab}\"\"\"Test for newy\"\"\"\n\n# Call newy\ninput_params = ''\nnewy(input_params){#Up Up Up Up Up}{#Left Left Left Left Left Left Left}{#Shift_L(Left) Shift_L(Left) Shift_L(Left) Shift_L(Left)}",
  "KWR-P/SHO": "{^}# it should",
  "KWR-P/STR": "{^}{>}str(){#Left}",
  "KWR-P/STREUPBG": "{^}{>}str(){#Left}",
  "KWR-P/TAOEUP": "{^}{>}type(){#Left}",
  "KWR-P/TERPB": "{^}{>}True if thing else False{#Left Left Left Left Left Left Left Left Left Left Left Left}{^}{>}",
  "KWR-P/TKEF": "{^}{>}def ():{#Left Left Left}{^}{>}",
  "KWR-P/TKOBG": "{^}{>}\"\"\".\"\"\"{#Left Left Left Left}{^}{-|}",
  "KWR-P/TKOBG/STREUPBG": "{^}{>}\"\"\".\"\"\"{#Left Left Left Left}{^}{-|}",
  "KWR-P/TOFRB": "pytorch",
  "KWR-P/TP": "{^}{>}if:{#Left}",
  "KWR-P/TPOR": "{^}{>}for item in items:{#Left Left Left Left Left Left Left Left Left Left Left Left}",
  "KWR-P/TREU": "{^}try:\n\nexcept Exception as e:\n    raise RuntimeError(f'An error occurred while... : {e}'){#Up Up Tab}",
  "SPEU/TKER": "Spyder",
  "SPAO*EU/TKER": "Spyder"
}